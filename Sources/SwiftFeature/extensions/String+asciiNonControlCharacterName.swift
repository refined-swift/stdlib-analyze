import Swift

extension String {
    func asciiNonControlCharacterName() -> String? {
        guard self.count == 1 else { return nil }
        return String.asciiNonControlCharacterName(Character(self))
    }

    // swiftlint:disable:next function_body_length cyclomatic_complexity
    static func asciiNonControlCharacterName(_ character: Character) -> String? {
        switch character {
        case " ": return "space"
        case "!": return "exclamation mark"
        case "\"": return "double quotation mark"
        case "#": return "number sign"
        case "$": return "dollar sign"
        case "%": return "percent sign"
        case "&": return "ampersand"
        case "'": return "apostrophe"
        case "(": return "left parenthesis"
        case ")": return "right parenthesis"
        case "*": return "asterisk"
        case "+": return "plus sign"
        case ",": return "comma"
        case "-": return "minus sign"
        case ".": return "period"
        case "/": return "slash"
        case "0": return "digit 0"
        case "1": return "digit 1"
        case "2": return "digit 2"
        case "3": return "digit 3"
        case "4": return "digit 4"
        case "5": return "digit 5"
        case "6": return "digit 6"
        case "7": return "digit 7"
        case "8": return "digit 8"
        case "9": return "digit 9"
        case ":": return "colon"
        case ";": return "semicolon"
        case "<": return "less-than sign"
        case "=": return "equal sign"
        case ">": return "greater-than sign"
        case "?": return "question mark"
        case "@": return "commercial at sign"
        case "A": return "capital A"
        case "B": return "capital B"
        case "C": return "capital C"
        case "D": return "capital D"
        case "E": return "capital E"
        case "F": return "capital F"
        case "G": return "capital G"
        case "H": return "capital H"
        case "I": return "capital I"
        case "J": return "capital J"
        case "K": return "capital K"
        case "L": return "capital L"
        case "M": return "capital M"
        case "N": return "capital N"
        case "O": return "capital O"
        case "P": return "capital P"
        case "Q": return "capital Q"
        case "R": return "capital R"
        case "S": return "capital S"
        case "T": return "capital T"
        case "U": return "capital U"
        case "V": return "capital V"
        case "W": return "capital W"
        case "X": return "capital X"
        case "Y": return "capital Y"
        case "Z": return "capital Z"
        case "[": return "left square bracket"
        case "\\": return "backslash"
        case "]": return "right square bracket"
        case "^": return "spacing circumflex accent"
        case "_": return "spacing underscore"
        case "`": return "spacing grave accent"
        case "a": return "small a"
        case "b": return "small b"
        case "c": return "small c"
        case "d": return "small d"
        case "e": return "small e"
        case "f": return "small f"
        case "g": return "small g"
        case "h": return "small h"
        case "i": return "small i"
        case "j": return "small j"
        case "k": return "small k"
        case "l": return "small l"
        case "m": return "small m"
        case "n": return "small n"
        case "o": return "small o"
        case "p": return "small p"
        case "q": return "small q"
        case "r": return "small r"
        case "s": return "small s"
        case "t": return "small t"
        case "u": return "small u"
        case "v": return "small v"
        case "w": return "small w"
        case "x": return "small x"
        case "y": return "small y"
        case "z": return "small z"
        case "{": return "left brace"
        case "|": return "vertical bar"
        case "}": return "right brace"
        case "~": return "tilde accent"
        case "¡": return "inverted exclamation mark"
        case "¢": return "cent sign"
        case "£": return "pound sterling sign"
        case "¤": return "general currency sign"
        case "¥": return "yen sign"
        case "¦": return "broken vertical bar"
        case "§": return "section sign"
        case "¨": return "spacing dieresis"
        case "©": return "copyright sign"
        case "ª": return "feminine ordinal sign"
        case "«": return "left double angle quote"
        case "¬": return "logical not sign"
        case "®": return "registered trademark sign"
        case "¯": return "spacing macron long accent"
        case "°": return "degree sign"
        case "±": return "plus-or-minus sign"
        case "²": return "superscript 2"
        case "³": return "superscript 3"
        case "´": return "spacing accute accent"
        case "µ": return "micro sign"
        case "¶": return "paragraph sign"
        case "·": return "middle dot"
        case "¸": return "spacing cedilla"
        case "¹": return "superscript 1"
        case "º": return "masculine ordinal indicator"
        case "»": return "right double angle quote"
        case "¼": return "fraction 1/4"
        case "½": return "fraction 1/2"
        case "¾": return "fraction 3/4"
        case "¿": return "inverted question mark"
        case "À": return "capital A grave"
        case "Á": return "capital A acute"
        case "Â": return "capital A circumflex"
        case "Ã": return "capital A tilde"
        case "Ä": return "capital A dieresis"
        case "Å": return "capital A ring"
        case "Æ": return "capital AE ligature"
        case "Ç": return "capital C cedilla"
        case "È": return "capital E grave"
        case "É": return "capital E acute"
        case "Ê": return "capital E circumflex"
        case "Ë": return "capital E dieresis"
        case "Ì": return "capital I grave"
        case "Í": return "capital I acute"
        case "Î": return "capital I circumflex"
        case "Ï": return "capital I dieresis"
        case "Ð": return "capital ETH"
        case "Ñ": return "capital N tilde"
        case "Ò": return "capital O grave"
        case "Ó": return "capital O acute"
        case "Ô": return "capital O circumflex"
        case "Õ": return "capital O tilde"
        case "Ö": return "capital O dieresis"
        case "×": return "multiplication sign"
        case "Ø": return "capital O slash"
        case "Ù": return "capital U grave"
        case "Ú": return "capital U acute"
        case "Û": return "capital U circumflex"
        case "Ü": return "capital U dieresis"
        case "Ý": return "capital Y acute"
        case "Þ": return "capital THORN"
        case "ß": return "small sharp s"
        case "à": return "small a grave"
        case "á": return "small a acute"
        case "â": return "small a circumflex"
        case "ã": return "small a tilde"
        case "ä": return "small a dieresis"
        case "å": return "small a ring"
        case "æ": return "small ae ligature"
        case "ç": return "small c cedilla"
        case "è": return "small e grave"
        case "é": return "small e acute"
        case "ê": return "small e circumflex"
        case "ë": return "small e dieresis"
        case "ì": return "small i grave"
        case "í": return "small i acute"
        case "î": return "small i circumflex"
        case "ï": return "small i dieresis"
        case "ð": return "small eth"
        case "ñ": return "small n tilde"
        case "ò": return "small o grave"
        case "ó": return "small o acute"
        case "ô": return "small o circumflex"
        case "õ": return "small o tilde"
        case "ö": return "small o dieresis"
        case "÷": return "division sign"
        case "ø": return "small o slash"
        case "ù": return "small u grave"
        case "ú": return "small u acute"
        case "û": return "small u circumflex"
        case "ü": return "small u dieresis"
        case "ý": return "small y acute"
        case "þ": return "small thorn"
        case "ÿ": return "small y dieresis"
        default: return nil
        }
    }
}
